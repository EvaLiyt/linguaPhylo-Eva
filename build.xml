<project default="build" basedir=".">

  <!-- CONFIGURATION: Source, JUnit test code and jar library locations. -->
  <property name="src" location="src"/>
  <property name="test" location="test"/>
  <property name="lib" location="lib"/>

  <property name="sourceVersion" value="1.8"/>
  <property name="targetVersion" value="1.8"/>
  <property name="beastSrcRevision" value="master"/>
  <!--*******************************************************************-->

  <!-- Names of temporary build/test directories -->
  <property name="build" location="build"/>
  <property name="build-lib" location="build-lib"/>
  <property name="build-test" location="build-test"/>
  <property name="test-reports" location="test-reports"/>
  <property name="dist" location="dist"/>


  <!-- Prepare for compilation -->
  <target name="init">

    <property name="projName" value="graphicalModelSimulator" />
    <property name="projVersion" value="0.0.1" />

    <mkdir dir="${build}"/>
    <mkdir dir="${build-lib}"/>
    <mkdir dir="${dist}"/>
    <copy todir="${build-lib}">
      <fileset dir="${lib}" includes="*.jar"/>
    </copy>
  </target>

  <!-- Compile -->
  <target name="compile" depends="init">
    <javac target="${targetVersion}" source="${sourceVersion}" srcdir="${src}" destdir="${build}" includeantruntime="false">
      <classpath>
	<pathelement path="${classpath}"/>
	<fileset dir="lib" includes="commons-math3-3.6.1.jar"/>
	<fileset dir="${build-lib}" includes="*.jar"/>
      </classpath>
    </javac>
  </target>

  <target name="build-dist" depends="compile">
    <property name="packageName" value="${projName}.v${projVersion}"/>
    <property name="pack" location="${dist}/package"/>
    <mkdir dir="${pack}"/>

    <jar jarfile="${pack}/${packageName}.src.jar" basedir="${src}" />

    <mkdir dir="${pack}/lib"/>
    <copy todir="${pack}/lib">
      <fileset dir="${lib}" includes="*.jar" />
    </copy>
    <jar jarfile="${pack}/lib/${packageName}.jar" basedir="${build}" />

    <copy file="README.md" tofile="${pack}/README" />
<!--
    <copy file="COPYING" todir="${pack}" />
    <copy todir="${pack}">
      <fileset dir="${lib}" includes="LICENSE*" />
    </copy>
-->
    <mkdir dir="${pack}/examples" />
    <copy todir="${pack}/examples">
      <fileset dir="examples" includes="*.lphy" />
    </copy>


    <jar jarfile="${pack}/${projName}.jar">
      <fileset dir="${build}"/>
      <restrict>
        <not>
          <name name="META-INF/**"/>
        </not>
        <archives>
          <zips>
            <fileset dir="${build-lib}" includes="**/*.jar"/>
          </zips>
        </archives>
      </restrict>
      <manifest>
        <attribute name="Main-Class" value="lphy.app.LinguaPhyloStudio"/>
      </manifest>
    </jar>
    
    <zip destfile="${dist}/${packageName}.zip" basedir="${pack}" />

    <delete dir="${pack}"/>

    <echo/>
    <echo/>
    <echo>** Package ${dist}/${packageName}.zip created successfuly! **</echo>
  </target>


  <target name="build" depends="compile,build-dist"/>
  
  <!-- Prepare for unit test compilation -->
  <target name="init-test" depends="init">
    <mkdir dir="${build-test}"/>
    <mkdir dir="${test-reports}"/>
  </target>


  <!-- Compile unit tests -->
  <target name="compile-test" depends="init-test,compile">
    <javac target="${targetVersion}" source="${sourceVersion}" srcdir="${test}" destdir="${build-test}" includeantruntime="false">
      <classpath>
	<pathelement path="${classpath}"/>
	<pathelement path="${build}" />
	<fileset dir="${build-lib}" includes="*.jar"/>
      </classpath>
    </javac>
  </target>


  <!-- Run unit tests -->
  <target name="test" depends="compile-test">
    <junit printsummary="yes" failureproperty="testFailed">
      <classpath>
	<pathelement path="${classpath}"/>
	<pathelement path="${build}" />
	<pathelement path="${build-test}" />
	<fileset dir="${build-lib}" includes="*.jar"/>
      </classpath>
      <batchtest fork="yes" todir="${test-reports}">
	<fileset dir="${test}">
	  <include name="**/*Test.java"/>
	</fileset>
	<formatter type="plain"/>
      </batchtest>
    </junit>

    <fail if="testFailed" status="1" message="Unit test failed."/>
  </target>



  <!-- Revert to pristine state. -->
  <target name="clean">
    <delete dir="${build}" />
    <delete dir="${build-lib}" />
    <delete dir="${dist}" />
    <delete dir="${build-test}" />
    <delete dir="${test-reports}" />
  </target>


    <target name="travis" depends="clean, compile, test">
        <fail if="testFailed" message="One or more graphicalModelSimulation tests failed."/>
	</target>

</project>
