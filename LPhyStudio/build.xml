<project default="compile" basedir="." name="studio" >

    <!-- TODO Java 16 not available in GitHub Action -->
    <property name="sourceVersion" value="15"/>
    <property name="targetVersion" value="15"/>

    <!--*******************************************************************-->

    <!-- Ant build fails if the repo dir isn't named linguaPhylo/LPhyStudio -->
    <property name="projName" value="LPhyStudio"/>
    <!-- source code dir separated from test   -->
    <property name="src" location="../${projName}/src" />
    <!-- source code dir of test   -->
    <property name="lib" location="../${projName}/lib" />
    <property name="test" location="../${projName}/test" />
    <!-- Names of temporary build/test directories, which are deleted before build -->
    <property name="build" location="../${projName}/build" />
    <property name="dist" location="../${projName}/dist" />
    <property name="build-test" location="../${projName}/build-test"/>
    <property name="test-reports" location="../${projName}/test-reports"/>

    <property name="lphy" location="../LPhy"/>

    <!--*******************************************************************-->

    <xmlproperty file="../pom.xml" collapseAttributes="true"/>

    <property name="projVersion" value="${project.version}"/>
    <property name="fullName" value="${projName}.v${projVersion}"/>

<!--    <path id="CLASSPATH">-->
<!--        <pathelement path="${build}"/>-->
<!--        <pathelement location="${dist}/${fullName}.jar"/>-->
<!--        <pathelement location="."/>-->
<!--    </path>-->

    <!-- Revert to pristine state. -->
    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${build-test}"/>
        <delete dir="${test-reports}"/>
    </target>

    <!-- Prepare for compilation -->
    <target name="init" depends="clean">
        <echo message="Java version: ${java.version}"/>
        <echo message="${ant.project.name}: ${ant.file}" />
        <echo message="Working dir is ${projName}." />

        <mkdir dir="${build}"/>
        <mkdir dir="${dist}"/>
    </target>

    <!-- Compile -->
    <target name="compile" depends="init" description="clean, create dirs, and compile.">
        <javac target="${targetVersion}" source="${sourceVersion}" srcdir="src" destdir="${build}"
               includeantruntime="false">
            <classpath>
                <pathelement path="${classpath}"/>
                <fileset dir="${lib}" includes="*.jar"/>
                <pathelement path="${lphy}/build"/>
                <fileset dir="${lphy}/lib" includes="*.jar"/>
            </classpath>
        </javac>
        <echo message="Successfully compiled ${projName}." />
    </target>

    <!-- jar -->
    <target name="dist" depends="compile">
        <echo>name=${project.groupId}, version=${project.version}</echo>
<!--    <echo>depends=${dependencies.dependency.groupId}, version=${dependencies.dependency.version}</echo>-->
        <echo>fullName=${fullName}</echo>

        <mkdir dir="${dist}"/>

        <jar jarfile="${dist}/${fullName}.jar">
            <fileset dir="${build}"/>
            <manifest>
                <attribute name="Main-Class" value="lphy.app.LinguaPhyloStudio"/>
                <attribute name="Version" value="${projVersion}"/>
                <!--   ${user.name}    -->
                <attribute name="Built-By" value="Walter Xie"/>
                <attribute name="Built-On" value="${TODAY}"/>
            </manifest>
            <zipgroupfileset dir="${lib}" includes="*.jar"/>
        </jar>
    </target>

    <!-- release -->
    <property name="pack" value="${dist}/package"/>

    <target name="release" depends="compile,dist"
            description="for the release process">
        <property name="packageName" value="${fullName}"/>
        <mkdir dir="${pack}"/>

        <copy file="${dist}/${fullName}.jar" tofile="${pack}/${fullName}.jar"/>

        <copy file="README.md" tofile="${pack}/README"/>
        <!--
            <copy file="COPYING" todir="${pack}" />
            <copy todir="${pack}">
              <fileset dir="${lib}" includes="LICENSE*" />
            </copy>
        -->
        <property name="exaDir" value="examples"/>
        <mkdir dir="${pack}/${exaDir}"/>
        <copy todir="${pack}/${exaDir}">
            <fileset dir="${exaDir}" includes="*.lphy">
                <exclude name="**/*covid*"/>
            </fileset>
            <fileset dir="${exaDir}">
                <include name="**/*.nex"/>
                <include name="**/*.nexus"/>
                <include name="**/*.fasta"/>
                <exclude name="**/*covid*"/>
            </fileset>
        </copy>
        <property name="tutDir" value="tutorials"/>
        <mkdir dir="${pack}/${tutDir}"/>
        <copy todir="${pack}/${tutDir}">
            <fileset dir="${tutDir}" includes="*.lphy">
                <!-- TODO in dev -->
                <exclude name="canis.lphy"/>
                <exclude name="bModelTest.lphy"/>
            </fileset>
            <fileset dir="${tutDir}">
                <include name="**/*.nex"/>
                <include name="**/*.nexus"/>
                <include name="**/*.fasta"/>
            </fileset>
        </copy>

        <zip destfile="${dist}/${packageName}.zip" basedir="${pack}"/>

<!--        <delete dir="${pack}"/>-->

        <echo/>
        <echo/>
        <echo>** Package ${dist}/${packageName}.zip created successfully! **</echo>
    </target>

<!--    &lt;!&ndash; Prepare for unit test compilation &ndash;&gt;-->
<!--    <target name="init-test">-->
<!--        <echo message="Java version: ${java.version}"/>-->
<!--        <echo message="${ant.project.name}: ${ant.file}"/>-->
<!--        <echo message="Working dir is ${projName}." />-->

<!--        <mkdir dir="${build-test}"/>-->
<!--        <mkdir dir="${test-reports}"/>-->
<!--    </target>-->


<!--    &lt;!&ndash; Require to compile main code before this &ndash;&gt;-->
<!--    <target name="compile-test" depends="init-test" description="only compile unit tests">-->
<!--        <javac target="${targetVersion}" source="${sourceVersion}" srcdir="${test}" destdir="${build-test}"-->
<!--               includeantruntime="false">-->
<!--            <classpath>-->
<!--                <pathelement path="${classpath}"/>-->
<!--                <pathelement path="${build}"/>-->
<!--                <fileset dir="${lib}" includes="*.jar"/>-->
<!--            </classpath>-->
<!--        </javac>-->
<!--        <echo message="Successfully compiled ${projName} tests." />-->
<!--    </target>-->


<!--    &lt;!&ndash; another pipeline parallel with dist &ndash;&gt;-->
<!--    <target name="test" depends="compile, compile-test"-->
<!--            description="run unit tests including compile main code">-->
<!--        <junit printsummary="yes" failureproperty="testFailed">-->
<!--            <classpath>-->
<!--                <pathelement path="${classpath}"/>-->
<!--                <pathelement path="${build}"/>-->
<!--                <pathelement path="${build-test}"/>-->
<!--                <fileset dir="${lib}" includes="*.jar"/>-->
<!--            </classpath>-->
<!--            <batchtest fork="yes" todir="${test-reports}">-->
<!--                <fileset dir="${test}">-->
<!--                    <include name="**/*Test.java"/>-->
<!--                </fileset>-->
<!--                <formatter type="plain"/>-->
<!--            </batchtest>-->
<!--        </junit>-->

<!--        <fail if="testFailed" status="1" message="Unit test of ${projName} failed."/>-->
<!--    </target>-->

<!--    <target name="build" depends="compile"/>-->

<!--    &lt;!&ndash;  https://docs.github.com/en/actions  &ndash;&gt;-->
<!--    <target name="github-actions" depends="build, compile-test, test">-->
<!--        <fail if="testFailed" message="One or more ${projName} tests failed."/>-->
<!--    </target>-->

</project>
