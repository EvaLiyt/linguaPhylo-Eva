<project default="compile" basedir="." name="studio" >

    <!--*******************************************************************-->

    <!-- build fails if the path isn't ../../linguaPhylo/LPhyStudio -->
    <property name="studioFolder" value="LPhyStudio"/>

    <property name="lphy" location="../LPhy"/>
    <import file="${lphy}/build.xml"/>
<!--    <echo>${lphyJar}</echo>-->
<!--    <echo>${projVersion}</echo>-->

    <!-- source code dir separated from test   -->
    <property name="src" location="${lphyRepo}/${studioFolder}/src" />
    <!-- source code dir of test   -->
    <!--    <property name="lib" location="../${projName}/lib" />-->
    <property name="test" location="${lphyRepo}/${studioFolder}/test" />
    <!-- Names of temporary build/test directories, which are deleted before build -->
    <property name="build" location="${lphyRepo}/${studioFolder}/build" />
    <property name="dist" location="${lphyRepo}/${studioFolder}/dist" />
    <property name="build-test" location="${lphyRepo}/${studioFolder}/build-test"/>
    <property name="test-reports" location="${lphyRepo}/${studioFolder}/test-reports"/>

    <!-- need 3rd party jar to use script engine, to convert the string to lower cases -->
    <!-- Jar file naming conventions: all small cases  name-major.minor.build.jar  -->
    <property name="studioJar" value="lphy-studio-${lphyVersion}"/>

    <!-- Revert to pristine state. -->
    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${build-test}"/>
        <delete dir="${test-reports}"/>
    </target>

    <!-- Prepare for compilation -->
    <target name="init" depends="clean">
        <echo message="Java version: ${java.version}"/>
        <echo message="${ant.project.name}: ${ant.file}" />
        <echo message="Working dir is ${user.dir}." />
        <echo message="Current dir is ${basedir}." />

        <mkdir dir="${build}"/>
<!--        <mkdir dir="${dist}"/>-->
    </target>

    <path id="studio-clspath">
        <pathelement path="${classpath}"/>
        <pathelement path="${lphyBuild}"/>
        <pathelement path="${lphyResources}"/>
        <fileset dir="${lphyLib}" includes="*.jar"/>
        <pathelement path="${build}"/>
<!--        <fileset dir="${lib}" includes="*.jar"/>-->
    </path>

    <!-- Compile -->
    <target name="compile" depends="init" description="clean, create dirs, and compile.">
        <echo>LPhy studio classpath is ${toString:studio-clspath}</echo>
        <!-- imported from ${lphy}/build.xml -->
        <javac target="${targetVersion}" source="${sourceVersion}" srcdir="${src}"
               destdir="${build}" includeantruntime="false">
            <classpath refid="studio-clspath"/>
        </javac>
        <echo message="Successfully compiled ${studioFolder}." />
    </target>

    <property name="extDir" value="lib"/>
    <!-- jar -->
    <target name="dist" depends="compile">
        <!-- manifest -->
        <tstamp/>
        <echo message="Version ${lphyVersion}" />
        <echo message="Class-Path ${studioJar}.jar" />
        <echo message="Created-By ${createBy}" />
        <echo message="Built-By ${builtBy}" />
        <echo message="Built-Date ${TODAY}" />

        <mkdir dir="${dist}"/>

        <jar jarfile="${dist}/${studioJar}.jar">
            <fileset dir="${build}"/>
            <manifest>
                <attribute name="Main-Class" value="lphy.app.LinguaPhyloStudio"/>
                <attribute name="Version" value="${lphyVersion}"/>
                <!-- default to have lib/${lphyJar}.jar in classpath -->
                <attribute name="Class-Path" value="${extDir}/${lphyJar}.jar"/>
                <attribute name="Created-By" value="${createBy}"/>
                <attribute name="Built-By" value="${builtBy}"/>
                <attribute name="Built-Date" value="${TODAY}"/>
            </manifest>
<!--            <zipgroupfileset dir="${lib}" includes="*.jar"/>-->
        </jar>
    </target>

    <!-- release, depend on lphy.dist -->

    <target name="release" depends="lphy.dist,compile,dist" unless="file.exists"
            description="for the release process">
        <property name="pack" value="${dist}/package"/>
        <mkdir dir="${pack}"/>
        <mkdir dir="${pack}/${extDir}"/>

        <copy file="${dist}/${studioJar}.jar" tofile="${pack}/${studioJar}.jar"/>
        <available property="file.exists" file="${lphy}/dist/${lphyJar}.jar"/>
        <!--  lphy core to ext as well  -->
        <copy file="${lphy}/dist/${lphyJar}.jar" tofile="${pack}/${extDir}/${lphyJar}.jar"/>

        <copy file="../README.md" tofile="${pack}/README"/>
        <!--
            <copy file="COPYING" todir="${pack}" />
            <copy todir="${pack}">
              <fileset dir="${lib}" includes="LICENSE*" />
            </copy>
        -->
        <property name="exaDir" value="examples"/>
        <mkdir dir="${pack}/${exaDir}"/>
        <copy todir="${pack}/${exaDir}">
            <!--  examples files are under the root -->
            <fileset dir="../${exaDir}" includes="*.lphy">
                <exclude name="**/*covid*"/>
            </fileset>
            <fileset dir="../${exaDir}">
                <include name="**/*.nex"/>
                <include name="**/*.nexus"/>
                <include name="**/*.fasta"/>
                <exclude name="**/*covid*"/>
            </fileset>
        </copy>
        <property name="tutDir" value="tutorials"/>
        <mkdir dir="${pack}/${tutDir}"/>
        <copy todir="${pack}/${tutDir}">
            <!--  tutorials files are underCodeBuilder the root -->
            <fileset dir="../${tutDir}" includes="*.lphy">
                <!-- TODO in dev -->
                <exclude name="canis.lphy"/>
                <exclude name="bModelTest.lphy"/>
            </fileset>
            <fileset dir="../${tutDir}">
                <include name="**/*.nex"/>
                <include name="**/*.nexus"/>
                <include name="**/*.fasta"/>
            </fileset>
        </copy>

        <zip destfile="${dist}/${lphyJar}.zip" basedir="${pack}"/>

<!--        <delete dir="${pack}"/>-->

        <echo/>
        <echo/>
        <echo>** Release ${dist}/${lphyJar}.zip created successfully! **</echo>
    </target>

<!--TODO tests-->

</project>
